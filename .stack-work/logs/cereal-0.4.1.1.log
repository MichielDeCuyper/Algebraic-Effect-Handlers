Configuring cereal-0.4.1.1...
Building cereal-0.4.1.1...
Preprocessing library cereal-0.4.1.1...
[1 of 5] Compiling Data.Serialize.Builder ( src/Data/Serialize/Builder.hs, .stack-work/dist/x86_64-osx/Cabal-1.22.5.0/build/Data/Serialize/Builder.o )

src/Data/Serialize/Builder.hs:59:1: Warning:
    The import of ‘Data.Monoid’ is redundant
      except perhaps to import instances from ‘Data.Monoid’
    To import instances alone, use: import Data.Monoid()

src/Data/Serialize/Builder.hs:197:40: Warning:
    In the use of ‘S.inlinePerformIO’
    (imported from Data.ByteString.Internal):
    Deprecated: "If you think you know what you are doing, use 'unsafePerformIO'. If you are sure you know what you are doing, use 'unsafeDupablePerformIO'. If you enjoy sharing an address space with a malevolent agent of chaos, try 'accursedUnutterablePerformIO'."
[2 of 5] Compiling Data.Serialize.Put ( src/Data/Serialize/Put.hs, .stack-work/dist/x86_64-osx/Cabal-1.22.5.0/build/Data/Serialize/Put.o )

src/Data/Serialize/Put.hs:70:1: Warning:
    The import of ‘Control.Applicative’ is redundant
      except perhaps to import instances from ‘Control.Applicative’
    To import instances alone, use: import Control.Applicative()

src/Data/Serialize/Put.hs:72:1: Warning:
    The import of ‘Data.Monoid’ is redundant
      except perhaps to import instances from ‘Data.Monoid’
    To import instances alone, use: import Data.Monoid()

src/Data/Serialize/Put.hs:73:1: Warning:
    The import of ‘Data.Foldable’ is redundant
      except perhaps to import instances from ‘Data.Foldable’
    To import instances alone, use: import Data.Foldable()
[3 of 5] Compiling Data.Serialize.Get ( src/Data/Serialize/Get.hs, .stack-work/dist/x86_64-osx/Cabal-1.22.5.0/build/Data/Serialize/Get.o )

src/Data/Serialize/Get.hs:89:1: Warning:
    The import of ‘Control.Applicative’ is redundant
      except perhaps to import instances from ‘Control.Applicative’
    To import instances alone, use: import Control.Applicative()

src/Data/Serialize/Get.hs:90:1: Warning:
    The import of ‘MonadPlus, when, liftM2, ap’
    from module ‘Control.Monad’ is redundant

src/Data/Serialize/Get.hs:456:13: Warning:
    In the use of ‘B.inlinePerformIO’
    (imported from Data.ByteString.Internal):
    Deprecated: "If you think you know what you are doing, use 'unsafePerformIO'. If you are sure you know what you are doing, use 'unsafeDupablePerformIO'. If you enjoy sharing an address space with a malevolent agent of chaos, try 'accursedUnutterablePerformIO'."
[4 of 5] Compiling Data.Serialize.IEEE754 ( src/Data/Serialize/IEEE754.hs, .stack-work/dist/x86_64-osx/Cabal-1.22.5.0/build/Data/Serialize/IEEE754.o )

src/Data/Serialize/IEEE754.hs:24:1: Warning:
    The import of ‘Control.Applicative’ is redundant
      except perhaps to import instances from ‘Control.Applicative’
    To import instances alone, use: import Control.Applicative()
[5 of 5] Compiling Data.Serialize   ( src/Data/Serialize.hs, .stack-work/dist/x86_64-osx/Cabal-1.22.5.0/build/Data/Serialize.o )

src/Data/Serialize.hs:68:1: Warning:
    The import of ‘Control.Applicative’ is redundant
      except perhaps to import instances from ‘Control.Applicative’
    To import instances alone, use: import Control.Applicative()
In-place registering cereal-0.4.1.1...
Installing library in
/Users/MichielDeCuyper/.stack/snapshots/x86_64-osx/nightly-2015-12-16/7.10.3/lib/x86_64-osx-ghc-7.10.3/cereal-0.4.1.1-GskkwdKSWUU2PP8FxH5aP8
Registering cereal-0.4.1.1...
